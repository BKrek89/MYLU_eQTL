  ##Prior to alignment, trim genome to areas with mappability scores higher than 1 with genmap.

#index genome with genmap
genmap index -F Myotis_lucifugus.Myoluc2.0.dna_rm.toplevel.fa -I genmapindex2

#Get mappability scores for genome
genmap map -K 100 -E 2 -I genmapindex2 -O gmapout.2 -bg

#Create filter file of mappability scores
awk -F$'\t' 'BEGIN{OFS="\t"} $4 < 1.0 { print $1, $2, $3, ".", $4 }' gmapout.2.bedgraph > gmap.mylu.rm.100k_filtered.bed

#Mask genome using bedtools and filterfile
bedtools maskfasta -fi Myotis_lucifugus.Myoluc2.0.dna_rm.toplevel.fa -bed gmap.mylu.rm.100k_filtered.bed -fo mylu.genome.rm.gmap.k100.fa

#Index genome with hisat2
hisat2-build /scratch/**/genome/mylu.genome.rm.gmap.k100.fa mylu.rm
  ##Alignment
#Align to Myotis lucifugus genome using hisat2. 
hisat2 -q -x /scratch/**/genome/hisat/mylu.rm -1 {filebase}.R1.repair.fastq.gz -2 {filebase}.R2.repair.fastq.gz -S {filebase}.sam

#Convert sam to bam files with samtools
for f in `ls -1 *.sam | sed 's/.sam//' `
do
samtools view -bS ${f}.sam > /projects/f_deenr_1/**/mylueq/DNA/bamsnew/${f}.bam
done

#Sort bam files with samtools
for f in `ls -1 *.bam | sed 's/.bam//' `
do
samtools sort ${f}.bam -o ${f}.sorted.bam
done

#Index bam files with samtools
for f in `ls -1 *.sorted.bam | sed 's/.sorted.bam//' `
do
samtools index ${f}.sorted.bam
done

  


